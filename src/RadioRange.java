import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

//SRM 621 Div 1 250
//Passed System Tests
public class RadioRange
{
	private boolean isGood(int[] X, int[] Y, int[] R, double radius) {		
		boolean good = true;
		int N = X.length;
		for(int i=0;i<N;++i) {
			int x = X[i];
			int y = Y[i];
			double D = Math.sqrt( (double) x*x + (double)y*y );
			double r = R[i];
			if(D-r-radius <=1e-6 && 1e-6 <= D+r-radius) {
				good = false;
				break;
			}
		}
		return good;
	}	
	public double RadiusProbability(int[] X, int[] Y, int[] R, int Z)
	{
		List<Double> possi = new ArrayList<Double>();
		possi.add(0.0);
		possi.add((double)Z);
		int N = X.length;
		for(int i=0;i<N;++i) {
			int x = X[i];
			int y = Y[i];
			double D = Math.sqrt( (double) x*x + (double)y*y );
			double r = R[i];
			possi.add(D-r);
			possi.add(D+r);
		}
		Collections.sort(possi);
		double ret = 0.0;
		for(int i=1;i<possi.size();++i) {
			double m = (possi.get(i) + possi.get(i-1))/2.0;
			if(m-Z<=1e-6 && isGood(X, Y, R, m)) {
				ret += (possi.get(i) - possi.get(i-1));
			}
		}
		ret /= (double)Z;
		return ret;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int[] p2, int p3, boolean hasAnswer, double p4) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + p3);
		System.out.println("]");
		RadioRange obj;
		double answer;
		obj = new RadioRange();
		long startTime = System.currentTimeMillis();
		answer = obj.RadiusProbability(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p4 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p4));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int[] p2;
		int p3;
		double p4;
		
		// ----- test 0 -----
		p0 = new int[]{0};
		p1 = new int[]{0};
		p2 = new int[]{5};
		p3 = 10;
		p4 = 0.5D;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{0};
		p1 = new int[]{0};
		p2 = new int[]{10};
		p3 = 10;
		p4 = 0.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{10};
		p1 = new int[]{10};
		p2 = new int[]{10};
		p3 = 10;
		p4 = 0.4142135623730951D;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{11,-11,0,0};
		p1 = new int[]{0,0,11,-11};
		p2 = new int[]{10,10,10,10};
		p3 = 31;
		p4 = 0.3548387096774194D;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{100};
		p1 = new int[]{100};
		p2 = new int[]{1};
		p3 = 10;
		p4 = 1.0D;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{1000000000};
		p1 = new int[]{1000000000};
		p2 = new int[]{1000000000};
		p3 = 1000000000;
		p4 = 0.41421356237309503D;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new int[]{20,-20,0,0};
		p1 = new int[]{0,0,20,-20};
		p2 = new int[]{50,50,50,50};
		p3 = 100;
		p4 = 0.3D;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = new int[]{0,-60,-62,-60,63,-97};
		p1 = new int[]{-72,67,61,-8,-32,89};
		p2 = new int[]{6,7,8,7,5,6};
		p3 = 918;
		p4 = 0.9407071068962471D;
		all_right = KawigiEdit_RunTest(7, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
