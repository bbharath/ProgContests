import java.util.HashSet;
import java.util.Iterator;

//Passed System Tests
//SRM 617 Div 1 250
public class MyLongCake
{
	public int cut(int N)
	{
		HashSet<Integer> divisors = new HashSet<Integer>();
		for(int i=2; (i*i)<=N;++i) {
			if(N%i==0) {
				int d1 = i;
				int d2 = N/i;
				divisors.add(d1);
				divisors.add(d2);
			}
		}
		if(divisors.size()==0)
			return 1;
		else if(divisors.size()==1) {
			return divisors.iterator().next();		
		} else {
			Iterator<Integer> divs = divisors.iterator();
			HashSet<Integer> cuts = new HashSet<Integer>();
			while(divs.hasNext()) {
				int d = divs.next();
				int q = N/d;
				for(int i=1;i<=q;++i) {
					cuts.add(d*i);
				}
			}
			return cuts.size();
		}
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		MyLongCake obj;
		int answer;
		obj = new MyLongCake();
		long startTime = System.currentTimeMillis();
		answer = obj.cut(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		
		// ----- test 0 -----
		p0 = 6;
		p1 = 4;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 1;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 15;
		p1 = 7;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 100000;
		p1 = 60000;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
