import java.util.Arrays;
//Passed System Tests
//SRM 612 Div 1 250
/*
 * I thought this was nothing - I was very complacent. 
 * But this was way harder than I thought. phew
 */
public class EmoticonsDiv1
{
	private int target;
		
	private int boundCheckMemo(int sofar, int numClipboard, int[][] memo) {
		int ret = 0;
		if(sofar>target)
			ret = sofar - target;
		else
			ret = memo[sofar][numClipboard];
		return ret;
	}
	
	private int solveIter() {
		int[][] memo = new int[target+1][target+1];
		for(int i=0;i<memo.length;++i)
			Arrays.fill(memo[i],-1);
		
		for(int sofar=target; sofar>=1; --sofar) {
			for(int numClipBoard=target; numClipBoard>=0; --numClipBoard) {
				
				int ret = Integer.MAX_VALUE;
				if(sofar == target) {
					ret = 0;
					memo[sofar][numClipBoard] = ret;
				} else {
					int t1 = Integer.MAX_VALUE, t2 = t1, t3 = t1, t4 = t1;
					
					
					//paste
					if(numClipBoard>0) {
						t1 = 1+boundCheckMemo(sofar+numClipBoard, numClipBoard, memo);
					}
					ret = Math.min(ret, t1);
					
					//copy + paste
					if (sofar>=1) {
						t2 = 2 + boundCheckMemo(2*sofar, sofar, memo); 
					}
					ret = Math.min(ret, t2);
					
					// *deletes + paste
					for(int i=sofar-1, moves =1; moves+1<ret && i>=1;--i, ++moves) {
						if(i+numClipBoard>sofar) {
							int tx = moves + 1 + boundCheckMemo(i+numClipBoard,  numClipBoard, memo);
							int ty = 1 + moves + 1 + boundCheckMemo(i+sofar, sofar, memo); //copy + *deletes + paste
							t4 = Math.min(t4, tx);
							t4 = Math.min(t4, ty);							
						} 
					}	
					
					ret = Math.min(ret, t3);
					ret = Math.min(ret, t4);
					memo[sofar][numClipBoard] = ret;
				}
			}
		}
		return memo[1][0];
	}	

	public int printSmiles(int smiles)
	{
		this.target = smiles;
		return solveIter();
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		EmoticonsDiv1 obj;
		int answer;
		obj = new EmoticonsDiv1();
		long startTime = System.currentTimeMillis();
		answer = obj.printSmiles(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 2;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 4;
		p1 = 4;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 6;
		p1 = 5;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 18;
		p1 = 8;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 11;
		p1 = 8;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		p0 = 70;
		p1 = 13;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		
		p0 = 1000;
		p1 = 21;
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		
		p0 = 506;
		p1 = 20;
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
		
		p0 = 897;
		p1 = 21;
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
