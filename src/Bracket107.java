import java.util.HashSet;
import java.util.Set;

//Passed System Tests
//SRM 670 Div 1 250
public class Bracket107
{
	private boolean isValid(String inp) {
		boolean ret = true;
		int numOpen = 0;
		for(int i=0;i<inp.length();++i) {
			char cur = inp.charAt(i);
			if(cur=='(') {
				++numOpen;
			} else {
				--numOpen;
			}
			if(numOpen<0)
			{
				ret = false;
			}
		}
		if(numOpen>0) {
			ret = false;
		}
		return ret;
	}
	public int yetanother(String s)
	{
		Set<String> possi = new HashSet<String>();
		int N = s.length();
		StringBuffer B = new StringBuffer(s);
		
		for(int i=0;i<N;++i) {
			char ch = B.charAt(i);
			B.deleteCharAt(i);
			for(int j=0;j<N;++j) {				
				B.insert(j, ch);
				if (isValid(B.toString())) {
					possi.add(B.toString());
				}
				B.deleteCharAt(j);
			}			
			B.insert(i, ch);
		}
		int ret = 0;
		if (possi.contains(s)) {
			ret = possi.size()-1;
		} else {
			ret = possi.size();
		}
		
		return ret;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		Bracket107 obj;
		int answer;
		obj = new Bracket107();
		long startTime = System.currentTimeMillis();
		answer = obj.yetanother(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		
		// ----- test 0 -----
		p0 = "(())";
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "(())()";
		p1 = 3;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "()()()";
		p1 = 3;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "(((())))";
		p1 = 5;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "((())())";
		p1 = 9;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
