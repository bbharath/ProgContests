//SRM 639 Division 1 250
//Passed System Tests
public class AliceGame
{
	public long findMinimumValue(long X, long Y)
	{
		long S = X+Y;
		if(S==0)
			return 0;
		int N = -1;
		boolean possible = false;
		for(long possi=1L; possi*possi<=S;++possi) {
			long sq = possi * possi;
			if(sq == S) {
				possible = true;
				N = (int) possi;
				break;
			}
		}
		if(possible) {
			if(X == 2 || Y == 2) {
				return -1;
			} else {
				if( X==0 && Y>0) 
					return 0;
				if (X>0 && Y==0) 
					return N;
				S += N;
				long sofar = 0L;
				for(int i=N, ret=1; i>=1; --i, ++ret ) {
					long curLim = 2*i;
					sofar+=curLim;
					long tx = X+ret, ty = Y+(N-ret);
					if(tx<=sofar && tx%2==0 && ty%2==0) {
						return ret;
					}
				}
			}
		} 
		return -1;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long p0, long p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		AliceGame obj;
		long answer;
		obj = new AliceGame();
		long startTime = System.currentTimeMillis();
		answer = obj.findMinimumValue(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long p0;
		long p1;
		long p2;
		
		// ----- test 0 -----
		p0 = 8L;
		p1 = 17L;
		p2 = 2L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 17L;
		p1 = 8L;
		p2 = 3L;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 0L;
		p1 = 0L;
		p2 = 0L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 9L;
		p1 = 9L;
		p2 = -1L;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 500000L;
		p1 = 500000L;
		p2 = 294L;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
