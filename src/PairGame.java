import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

//SRM 620 Div 1 250
//Passed System Tests
public class PairGame
{
	private List<Long> getVisited(int A, int B) {
		List<Long> vis = new ArrayList<Long>();
		int s1 = A;
		int s2 = B;
		while(true) {
			long S1 = s1;
			long S2 = s2;
			long S = (S1<<32) | S2;
			vis.add(S);
			if(s1>s2) {
				s1-=s2;	
			} else {
				s2-=s1;
			}
			if(s1>0 && s2>0) {
				continue;
			} else {
				break;
			}
		}
		Collections.sort(vis);
		
		return vis;
	}
	public int maxSum(int A, int B, int C, int D)
	{
		List<Long> visAB = getVisited(A, B); 
		List<Long> visCD = getVisited(C, D);
		
		int N = visAB.size();
		int M = visCD.size();
		
		int idx1 = 0, idx2 = 0;
		int ret = -1;
		while(idx1<N && idx2<M) {
			long t1 = visAB.get(idx1);
			long t2 = visCD.get(idx2);
			if(t1==t2) {
				int s1 = (int) t1;
				int s2 = (int) (t1>>32);
				ret = Math.max(ret, s1+s2);
			}
			if(t1<t2) {
				++idx1;
			} else {
				++idx2;
			}
		}
		return ret;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, int p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		PairGame obj;
		int answer;
		obj = new PairGame();
		long startTime = System.currentTimeMillis();
		answer = obj.maxSum(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int p3;
		int p4;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 2;
		p2 = 2;
		p3 = 1;
		p4 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 15;
		p1 = 4;
		p2 = 10;
		p3 = 7;
		p4 = 7;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1;
		p1 = 1;
		p2 = 10;
		p3 = 10;
		p4 = -1;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1000;
		p1 = 1001;
		p2 = 2000;
		p3 = 2001;
		p4 = 1001;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 10944;
		p1 = 17928;
		p2 = 7704;
		p3 = 21888;
		p4 = 144;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 1;
		p1 = 1;
		p2 = 1;
		p3 = 1;
		p4 = 2;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		p0 = 1000000;
		p1 = 1;
		p2 = 1000000;
		p3 = 1;
		p4 = 1000001;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, true, p4) && all_right;
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
