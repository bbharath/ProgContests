import java.util.Arrays;

//SRM 626 Div 1 250
//Passed System Tests
public class FixedDiceGameDiv1
{
	private double[] getNumWays(int A, int B) {
		double[][] numWays = new double[A+1][(A*B)+1];
		
		for(int i=0;i<numWays.length;++i)
			Arrays.fill(numWays[i],-1.0);
		
		for(int i=1;i<=B;++i)
			numWays[1][i]=1.0;
		
		for(int i=2;i<=A;++i) {
			for(int j=1;j<=(A*B);++j) {
				double num = 0L;
				for(int k=1;k<=B;++k) {
					if(j-k>=0 && numWays[i-1][j-k]!=-1L) {
						num+=numWays[i-1][j-k];
					}
				}
				if(num>0)
					numWays[i][j] = num;
				else
					numWays[i][j]=-1L;
							
			}
		}
		return numWays[A];
	}
	public double getExpectation(int A, int B, int C, int D)
	{
		double[] aliceNumWays = getNumWays(A, B);
		double[] bobNumWays = getNumWays(C, D);
		
		double[] aliceWinProb = new double[(A*B)+1];
		
		double aliceWinDenom = 0.0;
				
		for(int aliceScore=1; aliceScore<=(A*B); ++aliceScore) {			
			if(aliceNumWays[aliceScore]!=-1) {
				double aliceScoreProb = aliceNumWays[aliceScore];
				double bobLooseProb = 0;
				for(int bobScore = 1; bobScore < aliceScore && bobScore < bobNumWays.length; ++bobScore) {
					if (bobNumWays[bobScore]!=-1) {
						bobLooseProb += bobNumWays[bobScore];
					}
				}
								
				double p = (aliceScoreProb * bobLooseProb);
				aliceWinProb[aliceScore] = p;
				
				aliceWinDenom+=p;
			}
		}		
		double ret = -1;
		if(Math.abs(aliceWinDenom) > 1e-9) {			
			ret = 0.0;
			for(int score = 1; score<= (A*B); ++score) {
				ret+= ((aliceWinProb[score] * score) / aliceWinDenom );
			}			
		}
		return ret;		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, double p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		FixedDiceGameDiv1 obj;
		double answer;
		obj = new FixedDiceGameDiv1();
		long startTime = System.currentTimeMillis();
		answer = obj.getExpectation(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p4 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p4));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int p3;
		double p4;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 2;
		p2 = 1;
		p3 = 5;
		p4 = 2.0D;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 1;
		p2 = 1;
		p3 = 3;
		p4 = 3.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1;
		p1 = 5;
		p2 = 1;
		p3 = 1;
		p4 = 3.4999999999999996D;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 2;
		p1 = 6;
		p2 = 50;
		p3 = 30;
		p4 = -1.0D;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 50;
		p1 = 11;
		p2 = 50;
		p3 = 50;
		p4 = 369.8865999182022D;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		p0 = 50;
		p1 = 50;
		p2 = 50;
		p3 = 50;
		p4 = 1332.758910698442D;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
