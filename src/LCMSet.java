import java.math.BigInteger;
import java.util.Arrays;
import java.util.HashSet;

//SRM 611 Division 1 250
//Passed System Tests 
public class LCMSet
{
	private int getLCM(int a, int b) {
		BigInteger A = new BigInteger(""+a);
		BigInteger B = new BigInteger(""+b);
		BigInteger gcd = A.gcd(B);
		BigInteger prod = A.multiply(B);
		BigInteger lcm = prod.divide(gcd);
		return lcm.intValue();
	}
	private boolean canAdd(HashSet<Integer> inpArr, int X) {
		int lcm = 1;
		for(int inp : inpArr) {
			if(X%inp==0) {
				lcm = getLCM(lcm, inp);
			}
		}
		return (lcm != X);
	}
	private HashSet<Integer> getCompressed(int[] inp) {
		Arrays.sort(inp);
		HashSet<Integer> ret = new HashSet<Integer>();
		ret.add(inp[0]);
		for(int i=1;i<inp.length;++i) {
			if(canAdd(ret, inp[i])) {
				ret.add(inp[i]);
			}
		}
		return ret;
	}
	public String equal(int[] A, int[] B)
	{
		HashSet<Integer> ca = getCompressed(A);
		HashSet<Integer> cb = getCompressed(B);
		return (ca.equals(cb) ? "Equal" : "Not equal");
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		LCMSet obj;
		String answer;
		obj = new LCMSet();
		long startTime = System.currentTimeMillis();
		answer = obj.equal(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = new int[]{2,3,4,12};
		p1 = new int[]{2,3,4,6};
		p2 = "Equal";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{4,9};
		p1 = new int[]{6,36};
		p2 = "Not equal";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{2,3,5,7,14,105};
		p1 = new int[]{2,3,5,6,7,30,35};
		p2 = "Equal";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{2,3,5,7,14,105};
		p1 = new int[]{2,3,5,6,7,30,36};
		p2 = "Not equal";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
		p1 = new int[]{2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
		p2 = "Equal";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{999999999,1953125,512,1000000000};
		p1 = new int[]{999999999,1953125,512};
		p2 = "Equal";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new int[]{999999998,999999999,1000000000};
		p1 = new int[]{999999999,1000000000};
		p2 = "Not equal";
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------
		p0 = new int[]{81, 374, 268, 25058, 900, 77128524, 67, 4, 19, 3, 2029698, 60, 1900, 28, 76, 9, 100};
		p1 = new int[]{168300, 710394300, 151956, 3, 119700, 60, 63954, 3197700, 28, 3366, 17100, 10602900, 1900, 225522, 22383900, 67, 2268, 539899668, 19, 374, 36, 252, 28779300, 1077300, 81, 900, 171, 6300, 100, 300, 4, 9, 12, 153900, 4788, 3798900, 72179100, 1539};
		p2 = "Equal";
		all_right = KawigiEdit_RunTest(7, p0, p1, true, p2) && all_right;
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
