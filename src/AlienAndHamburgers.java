import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;

//SRM 605 Div 1 250
//Passed System Tests
public class AlienAndHamburgers
{
	public int getNumber(int[] type, int[] taste)
	{
		HashSet<Integer> taken = new HashSet<Integer>();
		int N = type.length;
		int totalTaste = 0;
		for(int i=0;i<N;++i) {
			if(taste[i]>=0) {
				totalTaste+=taste[i];
				taken.add(type[i]);
			}
		}
		
		int Y = taken.size();
		int A = totalTaste;
		
		int ret = Y * A;
		
		ArrayList<Integer> possi = new ArrayList<Integer>();
		
		for(int i=0;i<N;++i) {
			if(taken.contains(type[i]))
				continue;
			else {
				int t = type[i];
				int max = Integer.MIN_VALUE;
				for(int j=0;j<N;++j) {
					if(type[j]==t && taste[j]<0) {
						max = Math.max(max, taste[j]);
					}
				}
				possi.add(max);
				taken.add(t);
			}
		}
		
		Collections.sort(possi);
		
		for(int i=possi.size()-1;i>=0;--i) {
			int consider = possi.get(i);
			
			int possible = (Y+1) * (A+consider);
			if(possible>=ret) {
				ret = possible;
				++Y;
				A+=consider;
			}				
		}	
		return ret;
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		AlienAndHamburgers obj;
		int answer;
		obj = new AlienAndHamburgers();
		long startTime = System.currentTimeMillis();
		answer = obj.getNumber(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,2};
		p1 = new int[]{4,7};
		p2 = 22;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,1};
		p1 = new int[]{-1,-1};
		p2 = 0;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,2,3};
		p1 = new int[]{7,4,-1};
		p2 = 30;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,2,3,2,3,1,3,2,3,1,1,1};
		p1 = new int[]{1,7,-2,3,-4,-1,3,1,3,-5,-1,0};
		p2 = 54;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{30,20,10};
		p1 = new int[]{100000,-100000,100000};
		p2 = 400000;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		p0 = new int[] {1, 2, 2};
		p1 = new int[] {100, -1, -2};
		p2 = 198;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		
		p0 = new int[]{1, 6, 68, 27, 63, 51, 79, 12, 91, 89, 11, 53, 74, 54};
		p1 = new int[]{-60720, -60881, -37279, -68765, -54138, 35290, -3032, -72892, -58124, 79503, -23294, 49853, -98832, 40201};
		p2 = 1071126;
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		
		p0 = new int[]{33, 29, 12, 12, 46, 19, 12, 20, 26, 5, 5, 34, 12, 11, 30, 33, 18, 17, 23, 43, 36, 25, 21, 10, 25, 30, 40, 34, 45, 27, 33, 47, 11, 4, 27, 49, 27, 20, 24, 13, 34, 27, 20, 29, 24, 37, 37, 28, 44, 37};
		p1 = new int[]{-100000, 100000, 100000, -100000, -100000, -100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, -100000, -100000, 100000, 100000, -100000, -100000, 100000, 100000, 100000, 100000, -100000, -100000, -100000, -100000, 100000, 100000, 100000, 100000, 100000, 100000, -100000, 100000, 100000, 100000, 100000, 100000, 100000, -100000, 100000, 100000, 100000, 100000, 100000, 100000};
		p2 = 87000000;
		all_right = KawigiEdit_RunTest(7, p0, p1, true, p2) && all_right;
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
